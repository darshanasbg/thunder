openapi: 3.0.3
info:
  title: Group Management API
  version: "1.0"
  description: This API is used to manage groups.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://{host}:{port}
    variables:
      host:
        default: "localhost"
      port:
        default: "8090"

tags:
  - name: groups
    description: Operations related to group management

paths:
  /groups:
    get:
      tags:
        - groups
      summary: List groups
      responses:
        "200":
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupBasic'
              example:
                - id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                  name: "Sports"
                  description: "Sports group"
                  parent:
                    type: "organizationUnit"
                    id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
                - id: "257e528f-eb24-48b6-884d-20460e190957"
                  name: "Managers"
                  description: "Manager group"
                  parent:
                    type: "organizationUnit"
                    id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
        "400":
          description: Bad request
        "404":
          description: Parent group not found
        "500":
          description: Internal server error

    post:
      tags:
        - groups
      summary: Create a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
            examples:
              root-group:
                summary: Root group
                value:
                  name: "Sports"
                  description: "Sports group"
                  parent:
                    type: "organizationUnit"
                    id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
                  users:
                    - "7a4b1f8e-5c69-4b60-9232-2b0aaf65ef3c"
                    - "9f1e47d3-0347-4464-9f02-e0bfae02e896"
              nested-group:
                summary: Nested group
                value:
                  name: "Hockey"
                  description: "Hockey group"
                  parent:
                    type: "group"
                    id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                  users:
                    - "2cbb94c7-81f1-44e3-8e9e-75e0c3dd36da"
      responses:
        "201":
          description: Group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                root-group:
                  summary: Root group
                  value:
                    id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    name: "Sports"
                    description: "Sports group"
                    parent:
                      type: "organizationUnit"
                      id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
                    users:
                      - "7a4b1f8e-5c69-4b60-9232-2b0aaf65ef3c"
                      - "9f1e47d3-0347-4464-9f02-e0bfae02e896"
                nested-group:
                  summary: Nested group
                  value:
                    id: "6b1e7b8d-7e19-41eb-8fa2-c0ee5bb67a94"
                    name: "Hockey"
                    description: "Hockey group"
                    parent:
                      type: "group"
                      id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    users:
                      - "2cbb94c7-81f1-44e3-8e9e-75e0c3dd36da"
        "400":
          description: Bad request
        "409":
          description: A group with the same name exists under the same parent
        "500":
          description: Internal server error

  /groups/{id}:
    get:
      tags:
        - groups
      summary: Get a group by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Group details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                name: "Sports"
                description: "Sports group"
                parent:
                  type: "organizationUnit"
                  id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
                users:
                  - "7a4b1f8e-5c69-4b60-9232-2b0aaf65ef3c"
                  - "9f1e47d3-0347-4464-9f02-e0bfae02e896"
                groups:
                  - "6b1e7b8d-7e19-41eb-8fa2-c0ee5bb67a94"
        "404":
          description: Group not found
        "500":
          description: Internal server error

    put:
      tags:
        - groups
      summary: Update a group by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
            example:
              name: "Activities"
              description: "Activities group"
              parent:
                type: "organizationUnit"
                id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
              users:
                - "7a4b1f8e-5c69-4b60-9232-2b0aaf65ef3c"
                - "9f1e47d3-0347-4464-9f02-e0bfae02e896"
                - "2cbb94c7-81f1-44e3-8e9e-75e0c3dd36da"
              groups:
                - "6b1e7b8d-7e19-41eb-8fa2-c0ee5bb67a94"
      responses:
        "200":
          description: Group updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                name: "Activities"
                description: "Activities group"
                parent:
                  type: "organizationUnit"
                  id: "a839f4bd-39dc-4eaa-b5cc-210d8ecaee87"
                users:
                  - "7a4b1f8e-5c69-4b60-9232-2b0aaf65ef3c"
                  - "9f1e47d3-0347-4464-9f02-e0bfae02e896"
                  - "2cbb94c7-81f1-44e3-8e9e-75e0c3dd36da"
                groups:
                  - "6b1e7b8d-7e19-41eb-8fa2-c0ee5bb67a94"
        "400":
          description: Bad request
        "404":
          description: Group not found
        "409":
          description: A group with the same name exists under the same parent
        "500":
          description: Internal server error

    delete:
      tags:
        - groups
      summary: Delete a group by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Group deleted
        "400":
          description: Cannot delete group with child groups
        "500":
          description: Internal server error

components:
  schemas:
    Parent:
      type: object
      properties:
        type:
          type: string
          enum:
            - group
            - organizationUnit
        id:
          type: string
          format: uuid
    GroupBasic:
      type: object
      required: [id, name, parent]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        parent:
          $ref: '#/components/schemas/Parent'
    Group:
      allOf:
        - $ref: '#/components/schemas/GroupBasic'
      properties:
        users:
          type: array
          items:
            type: string
            format: uuid
        groups:
          type: array
          items:
            type: string
            format: uuid
    CreateGroupRequest:
      type: object
      required: [name, parent]
      properties:
        name:
          type: string
        description:
          type: string
        parent:
          $ref: '#/components/schemas/Parent'
        users:
          type: array
          items:
            type: string
            format: uuid

    UpdateGroupRequest:
      allOf:
        - $ref: '#/components/schemas/CreateGroupRequest'
      properties:
        groups:
          type: array
          items:
            type: string
            format: uuid